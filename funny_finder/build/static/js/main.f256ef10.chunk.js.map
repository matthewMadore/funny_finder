{"version":3,"sources":["Eventcard.js","DateSelect.js","Events.js","helpers/getDate.js","Navbar.js","ContactUs.js","App.js","reportWebVitals.js","index.js"],"names":["EventCard","_ref","eventname","eventlocation","eventtime","eventurl","React","Card","width","variant","CardContent","Typography","color","gutterBottom","href","target","DateSelect","currentDate","setCurrentDate","LocalizationProvider","dateAdapter","AdapterDayjs","DemoContainer","components","DatePicker","label","format","inputFormat","value","dayjs","onChange","newValue","Events","events","date","_React$useState","today","Date","getFullYear","getMonth","getDate","_React$useState2","_slicedToArray","_React$useState3","_React$useState4","_React$useState5","_React$useState6","displayEvents","setDisplayEvents","displayDate","useEffect","formattedDate","toLocaleDateString","filter","event","filterEvents","eventlist","map","index","Eventcard","key","Navbar","Box","sx","flexGrow","AppBar","position","Toolbar","IconButton","size","edge","aria-label","mr","align","component","Button","ContactUs","maxWidth","CardMedia","alt","height","image","CardActions","theme","createTheme","palette","primary","main","secondary","App","className","HashRouter","ThemeProvider","class","Routes","Route","path","element","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","createElement","StrictMode"],"mappings":"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","file":"static/js/main.f256ef10.chunk.js","sourcesContent":["import { Card, CardContent, Typography } from '@mui/material';\r\nimport * as React from 'react';\r\n\r\nexport default function EventCard ({eventname,eventlocation, eventtime, eventurl}) {\r\n\treturn <Card width=\"25vw\" variant=\"outlined\">\r\n\t\t\t<CardContent> \r\n\t\t\t  <Typography variant=\"h5\" color=\"text.secondary\" gutterBottom>\r\n        {eventname}\r\n              </Typography>\r\n\t\t\t  <Typography variant=\"body1\" color=\"text.secondary\" gutterBottom>\r\n        {eventlocation}\r\n              </Typography>\r\n\t\t\t  <Typography variant=\"body2\" color=\"text.secondary\" gutterBottom>\r\n        {eventtime}\r\n              </Typography>\r\n\t\t\t  <a href={eventurl} target=\"_blank\">\r\n\t\t\tTickets\r\n\t\t</a>\r\n\t\t\t</CardContent>\r\n\t\t\t</Card>\r\n}","import * as React from 'react';\r\nimport { DemoContainer } from '@mui/x-date-pickers/internals/demo';\r\nimport { AdapterDayjs } from '@mui/x-date-pickers/AdapterDayjs';\r\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';\r\nimport { DatePicker } from '@mui/x-date-pickers/DatePicker';\r\nimport dayjs from 'dayjs';\r\n\r\nexport default function DateSelect({ currentDate, setCurrentDate }) {\r\n  return (\r\n    <LocalizationProvider dateAdapter={AdapterDayjs}>\r\n      <DemoContainer components={['DatePicker']}>\r\n        <DatePicker \r\n        label=\"Change Date\" \r\n        format=\"YYYY-MM-DD\"\r\n        inputFormat=\"YYYY-MM-DD\"\r\n        value={dayjs(currentDate)}\r\n        onChange={(newValue) => setCurrentDate(newValue)}\r\n        />\r\n      </DemoContainer>\r\n    </LocalizationProvider>\r\n  );\r\n}","import Eventcard from './Eventcard';\r\nimport DateSelect from './DateSelect';\r\nimport * as React from 'react';\r\nimport { useState, useEffect } from 'react';\r\nimport { Typography } from '@mui/material';\r\nimport { getDate } from './helpers/getDate';\r\n\r\n\r\n\r\nexport default function Events () {\r\n\r\n    const events = [{\"eventname\": \"Open Mic Night\", \"eventlocation\": \"Old Salty Bar\", \"eventtime\": \"7:30 pm\", \"date\":\"10/4/2023\", \"eventurl\": \"https://oldsaltys.com/\"}, {\"eventname\": \"Joe List\", \"eventlocation\": \"Helium Comedy Club\", \"eventtime\": \"7:00 pm\", \"date\":\"10/4/2023\", \"eventurl\": \"https://portland.heliumcomedy.com/\"}, {\"eventname\": \"Joe List\", \"eventlocation\": \"Helium Comedy Club\", \"eventtime\": \"10:00 pm\", \"date\":\"10/5/2023\", \"eventurl\": \"https://portland.heliumcomedy.com/\"}, {\"eventname\": \"Improv Night\", \"eventlocation\": \"Portland Improv\", \"eventtime\": \"9:00 pm\", \"date\":\"10/5/2023\", \"eventurl\": \"https://www.curiouscomedy.org/\"}  ]\r\n\r\n\r\n   const [currentDate, setCurrentDate] = React.useState(getDate());\r\n   const [isOpen, setIsOpen] = React.useState(false)\r\n   const [displayEvents, setDisplayEvents] = React.useState([])\r\n \r\n  const displayDate =new Date(currentDate)\r\n  \r\n  function filterEvents() {const formattedDate =  new Date(currentDate).toLocaleDateString(); // Call toLocaleDateString as a function\r\n  setDisplayEvents(events.filter(event => event.date === formattedDate))\r\n  }\r\n  \r\n\r\n  useEffect(() => {\r\n    filterEvents()\r\n  }, [currentDate]);\r\n\r\n    const eventlist = displayEvents.map((event, index) => {\r\n        return <Eventcard  key={index} eventname={event.eventname} eventlocation={event.eventlocation} eventtime={event.eventtime} eventurl={event.eventurl} />\r\n\r\n    })\r\n    return (\r\n    <div>\r\n        <Typography variant=\"h3\">\r\n            Comedy Events for {displayDate.toLocaleDateString()}\r\n        </Typography>\r\n        <DateSelect currentDate={currentDate} setCurrentDate={setCurrentDate} />\r\n        {eventlist}\r\n        \r\n    </div>\r\n    )\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n","export function getDate () { \r\n    var today = new Date(),\r\n \r\n    date = today.getFullYear() + '-' + (today.getMonth() + 1) + '-' + today.getDate();\r\n \r\n    return date\r\n  };","import * as React from 'react';\r\nimport AppBar from '@mui/material/AppBar';\r\nimport Box from '@mui/material/Box';\r\nimport Toolbar from '@mui/material/Toolbar';\r\nimport Typography from '@mui/material/Typography';\r\nimport Button from '@mui/material/Button';\r\nimport IconButton from '@mui/material/IconButton';\r\n\r\n\r\nexport default function Navbar() {\r\n  return (\r\n    <Box sx={{ flexGrow: 1 }}>\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n          <IconButton\r\n            size=\"large\"\r\n            edge=\"start\"\r\n            color=\"inherit\"\r\n            aria-label=\"menu\"\r\n            sx={{ mr: 2 }}\r\n          >\r\n           \r\n          </IconButton>\r\n          <Typography align=\"left\" variant=\"h6\" component=\"div\" sx={{ flexGrow: 1 }}>\r\n            FunnyFinder\r\n          </Typography>\r\n          <Button href=\"#/\" color=\"inherit\">Events</Button>\r\n          <Button align=\"right\" href=\"#/contactus/\" color=\"inherit\">Contact Us</Button>\r\n          <Typography align=\"right\" variant=\"body1\" component=\"div\" sx={{ flexGrow: 1 }}>\r\n            All the funny. All in one place\r\n          </Typography>\r\n          \r\n        </Toolbar>\r\n      </AppBar>\r\n    </Box>\r\n  );\r\n}","import * as React from 'react';\r\nimport Card from '@mui/material/Card';\r\nimport CardActions from '@mui/material/CardActions';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport CardMedia from '@mui/material/CardMedia';\r\nimport Button from '@mui/material/Button';\r\nimport Typography from '@mui/material/Typography';\r\n\r\n\r\n\r\nexport default function ContactUs() {\r\n    return (\r\n       \r\n       <Card sx={{ maxWidth: 600 }}>\r\n      <CardMedia\r\n        component=\"img\"\r\n        alt=\"funnyfinderlogo\"\r\n        height=\"100\"\r\n        image=\"/images/fflogo.jpg\"\r\n      />\r\n      <CardContent>\r\n        <Typography gutterBottom variant=\"h5\" component=\"div\">\r\n          Get in Touch\r\n        </Typography>\r\n        <Typography variant=\"body2\" color=\"text.secondary\">\r\n          Want your open mic or event listed on FunnyFinder? Interested in promoting an event? Please contact our team. \r\n        </Typography>\r\n      </CardContent>\r\n      <CardActions>\r\n        <Button href = \"mailto: caspian.alderman@gmail.com\" size=\"small\">Email FunnyFinder</Button>\r\n      </CardActions>\r\n    </Card>\r\n    \r\n    )\r\n}","import './App.css';\r\nimport Events from './Events';\r\nimport Navbar from './Navbar';\r\nimport { ThemeProvider, createTheme } from '@mui/material/legacy/styles';\r\nimport { HashRouter, Route, Routes } from 'react-router-dom';\r\nimport * as React from 'react';\r\nimport ContactUs from './ContactUs';\r\n\r\n\r\n\r\n\r\n\r\nconst theme = createTheme({\r\n  palette: {\r\n    primary: {\r\n        main: '#DC143C'\r\n    },\r\n    secondary: {\r\n      main: '#E33E7F'\r\n    }\r\n  }\r\n});\r\n\r\nfunction App() {\r\n  return (\r\n    <div className='App'>\r\n    <HashRouter>\r\n     <ThemeProvider theme={theme}>\r\n    <Navbar />\r\n     <div class='right-container'>\r\n      <Routes>\r\n     <Route path=\"/\" element={<Events/>}/>\r\n     <Route path=\"/contactus\" element={<ContactUs/>}/>\r\n     </Routes>\r\n     </div>\r\n     </ThemeProvider>\r\n     </HashRouter>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById('root'));\r\nroot.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}